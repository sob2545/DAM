ft_atoi (ascii to integer)
문자열 숫자를 int형 숫자로 변경
ft_atoi({문자열})

How to use
printf("%d", ft_atoi("102"));
printf("%d", ft_atoi("-2147483648));
printf("%d", (ft_atoi(argv[1] + ft_atoi(argv[2]));

-----  RETURN  -----   
102
-2147483648

Error / Warning
- 빈 문자열이 들어올 경우
ft_atoi(“”);
    
$ ./a.out 
0        
    

- 적합하지 않은 문자열이 들어올 경우
ft_atoi(“abcd”);
    
$ ./a.out 
0        
    

- int 최대 범위, 최소 범위를 넘을 경우
ft_atoi(“2147483648”);
ft_atoi(“-2147483649”);
    
$ ./a.out
-1      
0       
    

- 문자열이 NULL 포인터일 경우
ft_atoi(NULL)
    
$ ./a.out         
Segmentation Fault

SYNOPSIS
int	ft_atoi(const char *str)

PARAMETER
- str : int형으로 변환하고자 하는 ascii 코드 문자열

DESCRIPTION
atoi 함수는 문자열을 읽어 숫자로 변환하는 함수로 읽을 수 없는 문자가 나올 경우 읽기를 중지한다. (null 문자 포함)

atoi 함수는 소수점과 지수를 인지하지 못하며 str의 양식은 다음과 같다.
	>>-+------------+--+----+--digits------------------------------><
	   '-whitespace-'  +-+--+
                   '- --'

whitespace
- ‘\n’  [back space]                   (8)
- ‘\t’  [Horizontal Tabulation]        (9)
- ‘\f’  [Line Feed]                    (10)
- ‘\v’  [Vertical Tabulation]          (11)
- ‘\f’  [Form Feed]                    (12)
- ‘\r’  [Carriage Return]              (13)
- ‘ ‘   [Space]                        (32)

atoi 함수는 다음과 같은 whitespace 공백을 무시하고 ‘-’ 또는 ‘+’의 기호 하나씩만 검사하여 부호를 판단한다.
부호 다음에 ascii 값이 나오면 int 형으로 반환하고, 다른 값이 있을 경우 읽기를 종료한다. (숫자가 없을 경우 0)

atoi 함수는 다음과 동일
(int)strtol(str, (char **)NULL, 10);
atoi 함수는 overflow, underflow를 처리하기 위해 strtol 함수를 통해 long 형을 int 형으로 변환하여 반환하기 때문에 long의 최대값과 최솟값을 반환 값으로 정하고 에러코드 설정
overflow → -1 반환
undeflow → 0 반환

RETURN VALUES
atoi 함수는 문자열을 int 값으로 반환한다.
